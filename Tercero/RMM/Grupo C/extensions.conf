[general]

[phones]

exten => _10X,1, GotoIf($[(${DB_EXISTS(DND/${EXTEN})})]?busy)

 same => n, Set(forwarding=${DB(${EXTEN}/FORW)})
 same => n, Set(nulo=${ISNULL(${forwarding})})
 same => n, Set(numLlamada=${IF($[${nulo}]?${EXTEN}:${forwarding})})

 same => n, Dial(PJSIP/${numLlamada},8,m)
 
 same => n, GotoIf($[${DIALSTATUS}=BUSY]?busy)
 same => n, GotoIf($[(${DB_EXISTS(DND/${numLlamada})})]?busy)

 same => n, VoiceMail(${numLlamada}@vmphones,u)
 same => n, Hangup

 same => n(busy), VoiceMail(${numLlamada}@vmphones,b)
 same => n, Hangup


exten => 800,1, Answer
 same => n, Wait(0.5)
 same => n, Goto(IVR,s,1)


exten => _XXX,1, Playback(pbx-invalid)
 same => n, Hangup

[IVR]

exten => s,1, Answer
 same => n, Set(TIMEOUT(digit)=7)
 same => n, SET(TIMEOUT(response)=10)
 same => n(loop), BackGround(to-collect-voicemail&press-1&for&do-not-disturb&press-2&for&call-forward&press-3&otherwise&press-4)
 same => n, WaitExten()


; Opcion 1: Buzon de voz

exten => 1,1, SayNumber(${EXTEN})
 same => n, VoiceMailMain(${CALLERID(num)}@vmphones)
 same => n, Hangup


; Opcion 2: No Molestar

exten => 2,1, SayNumber(${EXTEN})
 same => n, GotoIf($[${DB_EXISTS(DND/${CALLERID(num)})}]?quitar-dnd)
 same => n, Playback(do-not-disturb)
 same => n, Set(DB(DND/${CALLERID(num)})=1)
 same => n, Playback(activated)
 same => n, Hangup

 same => n(quitar-dnd), NoOp(${DB_DELETE(DND/${CALLERID(num)})})
 same => n, Playback(do-not-disturb)
 same => n, Playback(de-activated)
 same => n, Hangup


; Opcion 3: Desvio de llamadas

exten => 3,1, SayNumber(${EXTEN}) 
 same => n, Set(numero_desvio=${CALLERID(num)})
 same => n, Set(desvio_activado=${DB(${numero_desvio}/FORW)})
 same => n, GotoIf($[${desvio_activado}]?desactivar_desvio)
 same => n(bucle), Playback(please-enter-the&telephone-number&for&your&call-forwarding&astcc-followed-by-the-pound-key) 
 same => n, Read(desvio,,,,,12)
 same => n, Playback(call-forwarding&has-been-set-to)
 same => n, SayNumber(${desvio})
 same => n, Playback(if-this-is-correct&press-1&if-this-is-not-correct&press-2)
 same => n, Read(ack,,1,,,5)
 same => n, GotoIf($[${ack} = 1]?:bucle)
 same => n, Set(DB(${numero_desvio}/FORW)=${desvio})
 same => n, Playback(call-forwarding&activated&for)
 same => n, SayNumber(${desvio})
 same => n, Hangup()

same => n(desactivar_desvio), NoOp(${DB_DELETE(${numero_desvio}/FORW)})
same => n, Playback(call-forwarding&de-activated)
same => n, Hangup

; Opcion 4: Valor en bolsa

exten => 4,1, SayNumber(${EXTEN})
 same => n, Goto(IVR2,s,1)



[IVR2]

exten => s,1, Set(TIMEOUT(digit)=7)
 same => n, Set(TIMEOUT(response)=10)
 same => n(loop2), BackGround(for)
 same => n, SayAlpha(amzn)
 same => n, BackGround(press-1&for)
 same => n, SayAlpha(msft)
 same => n, BackGround(press-2&for)
 same => n, SayAlpha(aapl)
 same => n, BackGround(press-3)
 same => n, WaitExten()



; Opcion 1: Valor de Amazon


exten => 1,1, Set(CURLOPT(httpheader)=X-RapidAPI-Host: ms-finance.p.rapidapi.com)
 same => n, Set(CURLOPT(httpheader)=X-RapidAPI-Key: bb04f168dcmsh5023ec36f1641b7p13c5fejsn1cf23a093936)
 same => n, Set(jason=${CURL(https://ms-finance.p.rapidapi.com/market/v2/get-realtime-data?performanceIds=0P000000B7)})

 same => n, Set(jason=${CUT(jason,"f",13)})
 same => n, Set(jason=${CUT(jason,"e",4)})
 same => n, Set(jason=${jason:2:-2})

 same => n, SayNumber(${jason:0:4})
 same => n, Playback(with)
 same => n, SayNumber(${jason:5})
 same => n, Playback(euros)
 same => n, Hangup


; Opcion 2: Valor de Microsoft

exten => 2,1, Set(CURLOPT(httpheader)=X-RapidAPI-Host: ms-finance.p.rapidapi.com)
 same => n, Set(CURLOPT(httpheader)=X-RapidAPI-Key: bb04f168dcmsh5023ec36f1641b7p13c5fejsn1cf23a093936)
 same => n, Set(jason=${CURL(https://ms-finance.p.rapidapi.com/market/v2/get-realtime-data?performanceIds=0P000003MH)})

 same => n, Set(jason=${CUT(jason,"f",13)})
 same => n, Set(jason=${CUT(jason,"e",4)})
 same => n, Set(jason=${jason:2:-2})

 same => n, SayNumber(${jason:0:4})
 same => n, Playback(with)
 same => n, SayNumber(${jason:5})
 same => n, Playback(euros)
 same => n, Hangup


; Opcion 3: Valor de Apple

exten => 3,1, Set(CURLOPT(httpheader)=X-RapidAPI-Host: ms-finance.p.rapidapi.com)
 same => n, Set(CURLOPT(httpheader)=X-RapidAPI-Key: bb04f168dcmsh5023ec36f1641b7p13c5fejsn1cf23a093936)
 same => n, Set(jason=${CURL(https://ms-finance.p.rapidapi.com/market/v2/get-realtime-data?performanceIds=0P000000GY)})

 same => n, Set(jason=${CUT(jason,"f",13)})
 same => n, Set(jason=${CUT(jason,"e",4)})
 same => n, Set(jason=${jason:2:-2})

 same => n, SayNumber(${jason:0:4})
 same => n, Playback(with)
 same => n, SayNumber(${jason:5})
 same => n, Playback(euros)
 same => n, Hangup